{"version":3,"sources":["webpack:///./src/templates/lesson-post.js","webpack:///./node_modules/react-markdown/plugins/html-parser.js"],"names":["LessonPostTemplate","getTableOfContentsForTutorial","tableOfContents","category","tutorialTitle","tableOfContentsObj","JSON","parse","categoryNode","Object","entries","find","categoryObj","tutObj","render","post","this","props","data","strapiLesson","tutorialLessons","strapiTutorial","strapiTableOfContents","contents","pageContext","previous","next","tutorialLessonList","tutorial","title","parseHtml","htmlParser","isValidNode","node","console","log","name","processingInstructions","shouldProcessNode","location","tableOfContentsForTutorial","description","content","PageLayout","style","margin","fontSize","padding","display","marginBottom","rhythm","marginLeft","updated_at","source","escapeHtml","renderers","code","MarkdownSyntaxHighlighter","astPlugins","listStyle","justifyContent","to","slug","config","url","siteMetadata","siteUrl","identifier","React","Component","styled","div","pageQuery","module","exports"],"mappings":"kWAgBMA,E,0GAEFC,8BAAA,SAA8BC,EAAiBC,EAAUC,GACrD,IAAIC,EAAqBC,KAAKC,MAAML,GAChCM,EAAeC,OAAOC,QAAQL,GAAoBM,MAAK,SAACC,GACxD,OAAOA,EAAY,KAAOT,KAC3B,GACH,OAAOM,OAAOC,QAAQF,GAAcG,MAAK,SAACE,GACtC,OAAOA,EAAO,KAAOT,M,EAO7BU,OAAA,WACI,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,aACvBC,EAAkBJ,KAAKC,MAAMC,KAAKG,eAClCnB,EAAkBc,KAAKC,MAAMC,KAAKI,sBAAsBC,SAHzD,EAIoBP,KAAKC,MAAMO,YAA7BC,EAJF,EAIEA,SAAUC,EAJZ,EAIYA,KACXC,EAAqBX,KAAKf,8BAA8BC,EAAiBa,EAAKa,SAASzB,SAAUY,EAAKa,SAASC,OAEjHC,EAAYC,IAAW,CACvBC,YAAa,SAAUC,GAEnB,OADAC,QAAQC,IAAIF,EAAKG,MACI,MAAdH,EAAKG,MAEhBC,uBAAwB,CAAC,CACrBC,kBAAmB,SAAUL,GAEzB,OADAC,QAAQC,IAAIF,EAAKG,MACI,MAAdH,EAAKG,UAKxB,OACI,kBAAC,IAAD,CACIG,SAAUvB,KAAKC,MAAMsB,SACrBnB,gBAAiBA,EACjBL,KAAMA,EACNyB,2BAA4Bb,GAE5B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKE,MAAOd,EAAKc,MAAOY,YAAa1B,EAAK2B,UAC1C,kBAACC,EAAD,KACI,kBAAC,IAAD,KACI,yBAAKC,MAAO,CAACC,OAAQ,WACjB,wBAAID,MAAO,CAACE,SAAU,GAAID,OAAQ,EAAGE,QAAS,IACzChC,EAAKc,OAEV,uBACIe,MAAO,CACHI,QAAQ,QACRC,aAAcC,YAAO,GACrBC,WAAY,EACZJ,QAAS,IALjB,MAQQhC,EAAKqC,aAGjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,OAAQtC,EAAK2B,QACbY,YAAY,EACZC,UAAW,CAACC,KAAMC,KAClBC,WAAY,CAAC5B,MAGrB,wBACIc,MAAO,CACHK,aAAcC,YAAO,MAG7B,wBACIN,MAAO,CACHe,UAAW,OACXX,QAAS,OACTY,eAAgB,kBAGpB,wBAAIhB,MAAO,CAACC,OAAQ,EAAGE,QAAS,IACf,MAAZtB,EACG,yCACc,IACV,kBAAC,OAAD,CAAMoC,GAAE,WAAapC,EAASqC,MACzBrC,EAASI,QAIlB,+BAGR,wBAAIe,MAAO,CAACC,OAAQ,EAAGE,QAAS,IACnB,MAARrB,EACG,sCACU,kBAAC,OAAD,CAAMmC,GAAE,WAAanC,EAAKoC,MAASpC,EAAKG,QAGlD,gCAIZ,wBACIe,MAAO,CACHK,aAAcC,YAAO,MAG7B,kBAAC,SAAD,CACIa,OAAQ,CACJC,IAAQC,eAAaC,QAAlB,WAAoCnD,EAAK+C,KAC5CK,WAAYpD,EAAK+C,KACjBjC,MAAOd,EAAKc,a,GAhHXuC,IAAMC,WA0HxBrE,YAEf,IAAM2C,EAAa2B,IAAOC,IAAV,0EAAGD,CAAH,uDAMHE,EAAS,c,qBClJtBC,EAAOC,QAAU,EAAQ","file":"component---src-templates-lesson-post-js-206f5a1c76b284f55330.js","sourcesContent":["import React from \"react\";\nimport {graphql, Link} from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport {rhythm} from \"../utils/typography\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport styled from \"styled-components\";\nimport {MainContentWrapper} from \"../styles/styled_components/layout\";\nimport {BlogPostStyleWrapper} from \"../styles/styled_components/blog_post_styles\";\nimport MarkdownSyntaxHighlighter from \"../styles/markdown-syntax-highlighter\";\nimport {Disqus} from \"gatsby-plugin-disqus\";\nimport {siteMetadata} from \"../../gatsby-config\";\nimport DartPadInjectComponent from \"../utils/dartpad_inject_component\";\nimport htmlParser from 'react-markdown/plugins/html-parser'\n\nclass LessonPostTemplate extends React.Component {\n\n    getTableOfContentsForTutorial(tableOfContents, category, tutorialTitle) {\n        let tableOfContentsObj = JSON.parse(tableOfContents);\n        let categoryNode = Object.entries(tableOfContentsObj).find((categoryObj) => {\n            return categoryObj[0] === category;\n        })[1];\n        return Object.entries(categoryNode).find((tutObj) => {\n            return tutObj[0] === tutorialTitle;\n        });\n\n    }\n\n\n\n    render() {\n        const post = this.props.data.strapiLesson;\n        const tutorialLessons = this.props.data.strapiTutorial;\n        const tableOfContents = this.props.data.strapiTableOfContents.contents;\n        const {previous, next} = this.props.pageContext;\n        const tutorialLessonList = this.getTableOfContentsForTutorial(tableOfContents, post.tutorial.category, post.tutorial.title);\n\n        let parseHtml = htmlParser({\n            isValidNode: function (node) {\n                console.log(node.name);\n                return node.name !== '=';\n            },\n            processingInstructions: [{\n                shouldProcessNode: function (node) {\n                    console.log(node.name);\n                    return node.name !== '=';\n                },\n            }]\n        });\n\n        return (\n            <Layout\n                location={this.props.location}\n                tutorialLessons={tutorialLessons}\n                post={post}\n                tableOfContentsForTutorial={tutorialLessonList}\n            >\n                <DartPadInjectComponent/>\n                <SEO title={post.title} description={post.content}/>\n                <PageLayout>\n                    <MainContentWrapper>\n                        <div style={{margin: \"50px 0\"}}>\n                            <h1 style={{fontSize: 45, margin: 0, padding: 0}}>\n                                {post.title}\n                            </h1>\n                            <p\n                                style={{\n                                    display: `block`,\n                                    marginBottom: rhythm(1),\n                                    marginLeft: 0,\n                                    padding: 0\n                                }}\n                            >\n                                on {post.updated_at}\n                            </p>\n                        </div>\n                        <BlogPostStyleWrapper>\n                            <ReactMarkdown\n                                source={post.content}\n                                escapeHtml={false}\n                                renderers={{code: MarkdownSyntaxHighlighter}}\n                                astPlugins={[parseHtml]}\n                            />\n                        </BlogPostStyleWrapper>\n                        <hr\n                            style={{\n                                marginBottom: rhythm(1)\n                            }}\n                        />\n                        <ul\n                            style={{\n                                listStyle: \"none\",\n                                display: \"flex\",\n                                justifyContent: \"space-between\"\n                            }}\n                        >\n                            <li style={{margin: 0, padding: 0}}>\n                                {previous != null ? (\n                                    <div>\n                                        previous:{\" \"}\n                                        <Link to={`/lesson/${previous.slug}`}>\n                                            {previous.title}\n                                        </Link>\n                                    </div>\n                                ) : (\n                                    <div/>\n                                )}\n                            </li>\n                            <li style={{margin: 0, padding: 0}}>\n                                {next != null ? (\n                                    <div>\n                                        next: <Link to={`/lesson/${next.slug}`}>{next.title}</Link>\n                                    </div>\n                                ) : (\n                                    <div/>\n                                )}\n                            </li>\n                        </ul>\n                        <hr\n                            style={{\n                                marginBottom: rhythm(1)\n                            }}\n                        />\n                        <Disqus\n                            config={{\n                                url: `${siteMetadata.siteUrl}/lesson/${post.slug}`,\n                                identifier: post.slug,\n                                title: post.title\n                            }}\n                        />\n                    </MainContentWrapper>\n                </PageLayout>\n            </Layout>\n        );\n    }\n}\n\nexport default LessonPostTemplate;\n\nconst PageLayout = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n`;\n\nexport const pageQuery = graphql`\n    query LessonPostBySlug($slug: String!, $tutorialTitle: String!) {\n        strapiLesson(slug: { eq: $slug }) {\n            id\n            author {\n                email\n                username\n                twitter\n            }\n            content\n            updated_at(formatString: \"dddd, Do of MMMM, YYYY\")\n            slug\n            strapiId\n            title\n            tutorial {\n                category\n                title\n            }\n        }\n        strapiTutorial(title: { eq: $tutorialTitle }) {\n            lessons {\n                author\n                content\n                created_at\n                id\n                slug\n                title\n                tutorial\n                updated_at\n            }\n        }\n        strapiTableOfContents {\n            contents\n        }\n    }\n`;\n","module.exports = require('../lib/plugins/html-parser');"],"sourceRoot":""}