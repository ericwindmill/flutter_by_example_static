{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","render","author","this","props","Container","style","borderRadius","background","colors","dartPrimary","color","width","height","display","justifyContent","alignItems","fontSize","spacing","scale","marginRight","username","margin","bio","listStyle","padding","href","lineHeight","twitter","email","React","Component","styled","div","BlogPostTemplate","post","data","strapiBlogPost","location","title","description","content","marginBottom","rhythm","marginLeft","updated_at","user","source","escapeHtml","renderers","code","MarkdownSyntaxHighlighter","config","url","siteMetadata","siteUrl","slug","identifier","pageQuery"],"mappings":"+TAKMA,E,kGACJC,OAAA,WAAU,IACAC,EAAWC,KAAKC,MAAhBF,OACR,OACE,kBAACG,EAAD,KACE,yBACEC,MAAO,CACLC,aAAc,OACdC,WAAW,GAAIC,IAAOC,YACtBC,MAAO,QACPC,MAAO,IACPC,OAAQ,IACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,SAAS,GAAIC,IAAQC,MAAM,GAC3BC,YAAa,SAGdlB,EAAOmB,SAAS,IAEnB,6BACE,wBAAIf,MAAO,CAAEgB,OAAQ,eAAiBpB,EAAOmB,UAC7C,uBAAGf,MAAO,CAAEgB,OAAQ,eAAiBpB,EAAOqB,KAC5C,wBACEjB,MAAO,CACLQ,QAAS,OACTU,UAAW,OACXF,OAAQ,EACRG,QAAS,IAGX,wBAAInB,MAAO,CAAEgB,OAAQ,IACnB,uBAAGI,KAAM,IAAKpB,MAAO,CAAEqB,WAAY,EAAGL,OAAQ,EAAGG,QAAS,IAA1D,IACIvB,EAAO0B,QADX,gBAIF,4BACE,uBAAGF,KAAI,UAAYxB,EAAO2B,OAA1B,gB,GAtCIC,IAAMC,WA+ClB1B,EAAY2B,IAAOC,IAAV,iEAAGD,CAAH,oDAMAhC,I,wBC5CTkC,E,kGACJjC,OAAA,WACE,IAAMkC,EAAOhC,KAAKC,MAAMgC,KAAKC,eAE7B,OACE,kBAAC,IAAD,CAAQC,SAAUnC,KAAKC,MAAMkC,UAC3B,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKC,MAAOJ,EAAKI,MAAOC,YAAaL,EAAKM,UAC1C,kBAAC,IAAD,KACE,yBAAKnC,MAAO,CAAEgB,OAAQ,WACpB,wBAAIhB,MAAO,CAAEW,SAAU,GAAIK,OAAQ,UAAWG,QAAS,IACpDU,EAAKI,OAER,uBACEjC,MAAO,CACLQ,QAAQ,QACR4B,aAAcC,YAAO,GACrBC,WAAY,EACZnB,QAAS,IAGVU,EAAKU,WARR,OAQwBV,EAAKW,KAAKzB,WAGpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE0B,OAAQZ,EAAKM,QACbO,YAAY,EACZC,UAAW,CAAEC,KAAMC,QAGvB,wBACE7C,MAAO,CACLoC,aAAcC,YAAO,MAGzB,kBAAC,EAAD,CAAKzC,OAAQiC,EAAKW,OAClB,wBACExC,MAAO,CACLoC,aAAcC,YAAO,MAGzB,kBAAC,SAAD,CACES,OAAQ,CACNC,IAAQC,eAAaC,QAAlB,SAAkCpB,EAAKqB,KAC1CC,WAAYtB,EAAKqB,KACjBjB,MAAOJ,EAAKI,Y,GA9CKT,IAAMC,WAyDxB2B,GAFExB,YAEO","file":"component---src-templates-blog-post-js-3db76e504aa97335e8f8.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../styles/colors\";\nimport { spacing } from \"../styles/spacing\";\n\nclass Bio extends React.Component {\n  render() {\n    const { author } = this.props;\n    return (\n      <Container>\n        <div\n          style={{\n            borderRadius: \"100%\",\n            background: `${colors.dartPrimary}`,\n            color: \"white\",\n            width: 100,\n            height: 100,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            fontSize: `${spacing.scale(3)}`,\n            marginRight: \"50px\"\n          }}\n        >\n          {author.username[0]}\n        </div>\n        <div>\n          <h2 style={{ margin: \"0 0 10px 0\" }}>{author.username}</h2>\n          <p style={{ margin: \"10px 0 5px\" }}>{author.bio}</p>\n          <ul\n            style={{\n              display: \"flex\",\n              listStyle: \"none\",\n              margin: 0,\n              padding: 0\n            }}\n          >\n            <li style={{ margin: 0 }}>\n              <a href={\"/\"} style={{ lineHeight: 0, margin: 0, padding: 0 }}>\n                @{author.twitter} on Twitter\n              </a>\n            </li>\n            <li>\n              <a href={`mailto:${author.email}`}>contact</a>\n            </li>\n          </ul>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 50px 0;\n`;\n\nexport default Bio;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport { MainContentWrapper } from \"../styles/styled_components/layout\";\nimport { BlogPostStyleWrapper } from \"../styles/styled_components/blog_post_styles\";\nimport MarkdownSyntaxHighlighter from \"../styles/markdown-syntax-highlighter\";\nimport { Disqus } from \"gatsby-plugin-disqus\";\nimport Bio from \"../components/bio\";\nimport { siteMetadata } from \"../../gatsby-config\";\nimport DartPadInjectComponent from \"../utils/dartpad_inject_component\";\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.strapiBlogPost;\n\n    return (\n      <Layout location={this.props.location}>\n        <DartPadInjectComponent/>\n        <SEO title={post.title} description={post.content} />\n        <MainContentWrapper>\n          <div style={{ margin: \"50px 0\" }}>\n            <h1 style={{ fontSize: 45, margin: \"0 0 5px\", padding: 0 }}>\n              {post.title}\n            </h1>\n            <p\n              style={{\n                display: `block`,\n                marginBottom: rhythm(1),\n                marginLeft: 0,\n                padding: 0\n              }}\n            >\n              {post.updated_at} by {post.user.username}\n            </p>\n          </div>\n          <BlogPostStyleWrapper>\n            <ReactMarkdown\n              source={post.content}\n              escapeHtml={false}\n              renderers={{ code: MarkdownSyntaxHighlighter }}\n            />\n          </BlogPostStyleWrapper>\n          <hr\n            style={{\n              marginBottom: rhythm(1)\n            }}\n          />\n          <Bio author={post.user} />\n          <hr\n            style={{\n              marginBottom: rhythm(1)\n            }}\n          />\n          <Disqus\n            config={{\n              url: `${siteMetadata.siteUrl}/blog/${post.slug}`,\n              identifier: post.slug,\n              title: post.title\n            }}\n          />\n        </MainContentWrapper>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    strapiBlogPost(slug: { eq: $slug }) {\n      id\n      user {\n        email\n        username\n        twitter\n        bio\n      }\n      content\n      updated_at(formatString: \"dddd, Do of MMMM, YYYY\")\n      slug\n      strapiId\n      title\n      tags {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}