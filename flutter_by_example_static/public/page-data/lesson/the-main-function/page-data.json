{"componentChunkName":"component---src-templates-lesson-post-js","path":"/lesson/the-main-function","webpackCompilationHash":"","result":{"data":{"strapiLesson":{"id":"Lesson_9","author":{"email":"eric@ericwindmill.com","username":"Eric Windmill","twitter":"ericwindmill","profile_image":null},"content":"In order to write _any_ Dart program, be it a script or a Flutter app, you must define a function called `main`.\n\n```dart\nvoid main() {\n  print('Hello, Dart');\n}\n```\n\nThis function tells Dart where the program starts, and it must be in the file that is considered the \"entry point\" for you program. By convention, this will be in a file called `main.dart`.\n\nThe main function can execute any code within it's code block that you'd like it to. \n\nYou must have exactly one `main` function in your program.\n\nIn general, your main function will likely initiate any pre-processing needed for your program, and end with a function call that runs the rest of your app. Some examples:\n\n### Main function in simple printing script\n\n```dart\nvoid main() {\n  // calls to separate function\n  // which handles main functionality\n  printGreeting();\n}\n```\n\n### Main in a Flutter app\n\n```dart\nvoid main() {\n  // any preprocessing can be done here, such as determining a device location\n  //\n  // runApp is a Flutter function that runs your Flutter app\n  runApp(MyApp());  \n}\n```\n\n###  Main function in an AngularDart app \n\n```dart\nvoid main() {\n  // runApp is also used in AngularDart\n  runApp(ng.AppComponentNgFactory);\n}\n```","updated_at":"Saturday, 20th of June, 2020","slug":"the-main-function","strapiId":9,"title":"The main function","tutorial":{"category":"Dart","title":"Getting Started with Dart"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"the-main-function"}}}